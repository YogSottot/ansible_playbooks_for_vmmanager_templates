---
- import_tasks: include-vars.yml

- include_tasks: "{{ item }}"
  with_first_found:
    - "install-with-package-{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml"
    - "install-with-package-{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
    - "install-with-package-{{ ansible_distribution }}.yml"
    - "install-with-package-{{ ansible_os_family }}.yml"
    - "install-with-package.yml"

- name: Check A record (IPV4 address) for non-www hostname
  shell: "dig {{ ansible_fqdn }} +short"
  register: certbot_ansible_fqdn_dns_record
  tags:
   - skip_ansible_lint

- name: Check A record (IPV4 address) for www hostname
  shell: "dig www.{{ ansible_fqdn }} +short"
  register: certbot_ansible_fqdn_www_dns_record
  tags:
   - skip_ansible_lint

#- name: debug
#  debug:
#    msg: "{{ certbot_ansible_fqdn_dns_record }}"

#- name: debug.stdout
#  debug:
#    msg: "{{ certbot_ansible_fqdn_dns_record.stdout }}"

#- name: debug www.stdout
#  debug:
#    msg: "{{ certbot_ansible_fqdn_www_dns_record.stdout }}"

#- name: debug ansible_default_ipv4.address
#  debug:
#    msg: "{{ ansible_default_ipv4.address }}"

#- name: Check A record (IPV4 address) for {{ ansible_fqdn }}
#  debug: msg="{{ lookup('dig', '{{ ansible_fqdn }}.')}}"
#  register: certbot_ansible_fqdn_dns_record

#- name: Check A record (IPV4 address) for www.{{ ansible_fqdn }}
#  debug: msg="{{ lookup('dig', 'www.{{ ansible_fqdn }}.')}}"
#  register: certbot_ansible_fqdn_www_dns_record

- name: generate www cert
  command: >
        {{ certbot_script }} --agree-tos --register-unsafely-without-email
            --staple-ocsp --webroot certonly -w /opt/letsencrypt
            -d {{ ansible_fqdn }} -d  www.{{ ansible_fqdn }}
  args:
    creates: "/etc/letsencrypt/live/{{ ansible_fqdn }}/chain.pem"
  notify:
    - nginx reload
  ignore_errors: yes
  when:
    - "certbot_ansible_fqdn_dns_record.stdout == ansible_default_ipv4.address"
    - "certbot_ansible_fqdn_www_dns_record.stdout == ansible_default_ipv4.address"
    #- "'certbot_ansible_fqdn_dns_record.stdout' is subset('ansible_all_ipv4_addresses')"
    #- "'certbot_ansible_fqdn_www_dns_record.stdout' is subset('ansible_all_ipv4_addresses')"
  register: certbot_generate_cert
#  tags:
#  - skip_ansible_lint

- name: generate non-www cert
  command: >
        {{ certbot_script }} --agree-tos --register-unsafely-without-email
             --staple-ocsp --webroot certonly -w /opt/letsencrypt
             -d {{ ansible_fqdn }}
  args:
    creates: "/etc/letsencrypt/live/{{ ansible_fqdn }}/chain.pem"
  notify:
    - nginx reload
  ignore_errors: yes
  register: certbot_generate_cert2
  when:
    - "certbot_ansible_fqdn_dns_record.stdout == ansible_default_ipv4.address"
    - "certbot_ansible_fqdn_www_dns_record.stdout != ansible_default_ipv4.address"
    #- "'certbot_ansible_fqdn_dns_record.stdout' is subset('ansible_all_ipv4_addresses')"
    #- "not 'certbot_ansible_fqdn_www_dns_record.stdout' is subset('ansible_all_ipv4_addresses')"
  tags:
  - skip_ansible_lint

- import_tasks: renew-cron.yml
  when:
    - certbot_auto_renew
    - certbot_generate_cert == 'succeeded' or certbot_generate_cert2 == 'succeeded'
