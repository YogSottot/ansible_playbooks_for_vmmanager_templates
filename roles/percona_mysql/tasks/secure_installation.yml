---
- name: copy global client /etc/my.cnf
  template:
    src=my.cnf.j2
    dest=/etc/my.cnf
    owner=root
    group=root
    mode=0644
    seuser=system_u
    serole=object_r
    setype=mysqld_etc_t
    selevel=s0

- name: Cheking if mysql is already configured with the password
  stat:
    path: "{{ percona_mysql_password_changed }}"
  register: "percona_mysql_password_changed"

#- debug:
#    var: percona_mysql_password_changed.stat.exists

- name: Find temporary password from error log on 5.7+
  shell: "grep 'temporary.*root@localhost' /var/log/mysql/error.log | sed 's/.*root@localhost.* //'"
  register: mysql_root_password_temp
  ignore_errors: true
  tags: register
  when: 'percona_mysql_server_version|replace(".","") >= "5.7"'

#- debug:
#    var: mysql_root_password_temp.stdout_lines
#  when: mysql_root_password_temp.stdout != ''

- name: Generate local random password that we'll use for root@localhost in MySQL
  command: "echo {{ percona_mysql_root_password | default(lookup('password', '/tmp/percona_mysql/' + inventory_hostname + '_percona_mysql_root_password_file length=12 chars=ascii_letters,digits'), true) }}"
  register: percona_mysql_root_password
  ignore_errors: true
  tags:
    - register
    - skip_ansible_lint

#- debug:
#    var: percona_mysql_root_password
#  when: percona_mysql_root_password.stdout != ''

- name: Set new root password using SET PASSWORD syntax for PS55/56
  command: mysql -e 'SET PASSWORD = PASSWORD('"{{ percona_mysql_root_password.stdout }}"') ' -uroot -p'' }}
  register: mysql_change_root_password
  ignore_errors: true
  tags: register
  when:
    - 'percona_mysql_server_version|replace(".","") < "5.7"'
    - "not percona_mysql_password_changed.stat.exists"

- name: Set new root password using ALTER USER syntax for PS57+
  ignore_errors: true
  shell: 'mysqladmin -u root --password="{{ mysql_root_password_temp.stdout }}" password "{{ percona_mysql_root_password.stdout }}"'
  register: mysql_change_root_password
  tags:
   - register
   - skip_ansible_lint
  when:
    - 'percona_mysql_server_version|replace(".","") >= "5.7"'
    - "not percona_mysql_password_changed.stat.exists"

- name: Install root client configuration file in /root/.my.cnf
  template:
    src=root.my.cnf.j2
    dest="{{ ansible_env.HOME }}/.my.cnf"
    owner=root
    group=root
    mode=0600
    seuser=system_u
    serole=object_r
    setype=mysqld_etc_t
    selevel=s0
  when:
    - "not percona_mysql_password_changed.stat.exists"

- name: Generate local random password that we'll use for {{ percona_mysql_user_name }} @localhost in MySQL
  command: "echo {{ percona_mysql_user_password | default(lookup('password', '/tmp/percona_mysql/' + inventory_hostname + '_percona_mysql_user_password_file length=12 chars=ascii_letters,digits'), true) }}"
  register: percona_mysql_user_password
  ignore_errors: true
  tags:
    - register
    - skip_ansible_lint
  when:
    - percona_mysql_user_name is defined

#- debug:
#    var: percona_mysql_user_password
#  when: percona_mysql_user_password.stdout != ''

- name: Create the local Percona MySQL User
  mysql_user:
    name={{ percona_mysql_user_name }}
    host={{ percona_mysql_user_host }}
    password={{ percona_mysql_user_password | default(lookup('file', '/tmp/percona_mysql/' + inventory_hostname + '_percona_mysql_user_password_file'), true) }}
    priv={{ percona_mysql_user_priv | default("*.*:ALL,GRANT") }}
    login_unix_socket=/var/run/mysqld/mysqld.sock
  when:
    - ( ansible_env.HOME  != '/root')
    - percona_mysql_user_name is defined

- name: Install client configuration file .my.cnf in mysql_home_dir / mysql_installation_dir
  template:
    src=user.my.cnf.j2
    dest="{{ percona_mysql_home_dir }}/{{ percona_mysql_installation_user }}/.my.cnf"
    owner={{ percona_mysql_installation_user }}
    group={{ percona_mysql_installation_user }}
    mode=0600
    seuser=system_u
    serole=object_r
    setype=mysqld_etc_t
    selevel=s0
  when:
    - (ansible_env.USER != 'root')
    - percona_mysql_user_name is defined

- name: remove anonymous users
  mysql_user:
    name=''
    host={{ item }}
    state=absent
    login_unix_socket=/var/run/mysqld/mysqld.sock
  with_items:
      - localhost
      - "{{ ansible_hostname }}"
  ignore_errors: true

- name: remove superfluous root users
  mysql_user:
    name=root
    host={{ item }}
    state=absent
    login_unix_socket=/var/run/mysqld/mysqld.sock
  with_items:
      - 127.0.0.1
      - ::1
      - "{{ ansible_hostname }}"
  ignore_errors: true

- name: Remove the default test database
  mysql_db:
    name=test
    state=absent
  ignore_errors: true

- name: Remove the passwords tmp directory
  file:
      path: /tmp/percona_mysql/
      state: absent
...
